{"version":3,"sources":["logo.svg","App.js","Hamming.js","reportWebVitals.js","index.js"],"names":["App","hammingDistance","numA","numB","stringA","toString","stringB","result","length","i","Error","HammingDistancePlot","props","localStorage","getItem","state","list","value","retrievedData","JSON","parse","map","parseInt","handleSubmit","bind","handleChange","console","log","script","document","createElement","src","async","body","appendChild","this","plot_hamming","event","isNaN","clear","alert","numbers","push","setItem","stringify","includes","setState","target","hamming_numbers","center","j","colors","margin","width","height","padding","svg","d3","append","attr","xScale","linear","domain","range","yScale","xAxis","axis","scale","orient","yAxis","call","selectAll","style","data","enter","d","idx","distance","on","transition","duration","x","y","text","remove","select","k","id","className","onSubmit","type","onChange","class","href","data-icon","aria-label","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37c87be8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\"\nimport { scaleLinear, max, axisLeft, axisBottom, select } from \"d3\"\nimport * as d3 from 'd3'\n\n//https://jsfiddle.net/matehu/w7h81xz2/\n//https://users.cecs.anu.edu.au/~jks/Hamming.html\n//https://www.cnblogs.com/littleSpill/p/10836530.html\n\nimport './Hamming.css';\n\nfunction hammingDistance(numA, numB) {\n\n    var stringA = numA.toString()\n    var stringB = numB.toString()\n\n    let result = 0\n\n    if (stringA.length === stringB.length) {\n\n\n\n        for (let i = 0; i < stringA.length; i++) {\n            if ((stringA)[i] !== (stringB)[i]) {\n                result++\n            }\n        }\n\n        return result\n\n    } else {\n        throw new Error('Strings do not have equal length')\n    }\n}\n\n\nclass HammingDistancePlot extends React.Component{\n\tconstructor(props) {\n    \tsuper(props)\n\n    \tif (localStorage.getItem(\"numbers\")===null) {\n    \t\tthis.state = {list: [], value: \"\", };\n    \t} else {\n    \t\tvar retrievedData = localStorage.getItem(\"numbers\");\n    \t\tvar numbers = JSON.parse(retrievedData);\n    \t\tlet list = numbers.map(i=>parseInt(i))\n\n    \t\tthis.state = {list: list, value: \"\", };\n    \t}\n\n    \t\n\n    \tthis.handleSubmit = this.handleSubmit.bind(this);\n    \tthis.handleChange = this.handleChange.bind(this);\n\n    \tconsole.log('I was triggered during constructor')\n  \t}\n\n  \tcomponentDidMount(){\n\n        const script = document.createElement(\"script\");\n\n        script.src = \"https://buttons.github.io/buttons.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        this.plot_hamming()\n    }\n\n    handleSubmit(event) {\n\n\n    \tif (!isNaN(parseInt(this.state.value)) && this.state.value.length === 5) {\n\n    \t\tif (parseInt(this.state.value) > 99999 || parseInt(this.state.value) < 0) {\n    \t\t\talert('invalid number');\n    \t\t} else {\n    \t\t\t// alert('A name was submitted: ' + this.state.value);\n    \t\t\t// this.state.numbers.push(parseInt(this.state.value))\n\n    \t\t\tvar int_value = parseInt(this.state.value)\n\n    \t\t\tif (localStorage.getItem(\"numbers\") === null) {\n    \t\t\t\tvar numbers = []\n    \t\t\t\tnumbers.push(this.state.value)\n    \t\t\t\tlocalStorage.setItem(\"numbers\", JSON.stringify(numbers));\n\n    \t\t\t} else {\n    \t\t\t\tvar retrievedData = localStorage.getItem(\"numbers\");\n    \t\t\t\tvar numbers = JSON.parse(retrievedData);\n    \t\t\t\tif (!numbers.includes(this.state.value)) {\n    \t\t\t\t\tnumbers.push(this.state.value)\n    \t\t\t\t}\n    \t\t\t\t\n    \t\t\t\tlocalStorage.setItem(\"numbers\", JSON.stringify(numbers));\n\n    \t\t\t}\n\n    \t\t\t\n\t\t\t\t// alert('what?' + numbers.length)\n    \t\t\t\n    \t\t}\n\n    \t} else {\n\n    \t\tif (this.state.value === 'clear') {\n    \t\t\tlocalStorage.clear()\n    \t\t\talert('numbers clear')\n    \t\t} else {\n    \t\t\talert('Please input a 5-digit integer');\n    \t\t}\n    \t\t\n    \t}\n\n    \t\n  \t}\n\n  \thandleChange(event) {\n    \tthis.setState({value: event.target.value});\n    }\n\n  \tplot_hamming() {\n\n  \t\tvar hamming_numbers = this.state.list\n\n  \t\tvar center = []\n\n  \t\tfor (var i = 0; i <= hamming_numbers.length - 1; i++) {\n  \t\t\tfor (var j = i+1; j <= hamming_numbers.length - 1; j++) {\n  \t\t\t\tcenter.push([hamming_numbers[i], hamming_numbers[j]])\n  \t\t\t}\n  \t\t}\n\n  \t\t\n  \t\tvar colors = [\"slateblue\", \"green\", \"steelblue\", \"pink\", \"orange\", \"yellow\"]\n\n  \t\tconst margin = { top: 20, right: 20, bottom: 20, left: 20 };\n    \tconst width = 800 - margin.left - margin.right;\n    \tconst height = 750 - margin.top - margin.bottom;\n    \tvar padding = {top:30,right:30,bottom:100,left:100};\n\n  \t\tvar svg = d3.select(\"#body\")                    \n                    .append(\"svg\")                      \n                    .attr(\"width\",width)                \n                    .attr(\"height\",height)  \n\n        var xAxisWidth = 600; \n        var yAxisWidth = 600;           \n\n        var xScale = d3.scale.linear()                          \n                    .domain([0,100000])\n                    .range([0,xAxisWidth])\n\n        var yScale = d3.scale.linear()                          \n                    .domain([0,100000])\n                    .range([0,yAxisWidth])\n\n        var xAxis = d3.svg.axis()                       \n                        .scale(xScale)                  \n                        .orient(\"bottom\")\n\n        yScale.range([yAxisWidth,0])\n\n        var yAxis = d3.svg.axis()                      \n                        .scale(yScale)                  \n                        .orient(\"left\")\n\n\n        svg.append(\"g\")                          \n            .attr(\"class\",\"axis\")               \n            .attr(\"transform\",\"translate(\"+padding.left+\",\"+(height-padding.bottom)+\")\")  \n            .attr(\"fill\", \"white\")\n            .call(xAxis)\n            .selectAll(\"text\")  \n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-1.5em\")\n            .attr(\"dy\", \"0em\")\n            .attr(\"transform\", \"rotate(-65)\" ); \n\n\n              \n\n\n        svg.append(\"g\")                                \n            .attr(\"class\",\"axis\")                      \n            .attr(\"transform\",\"translate(\"+padding.left+\",\"+(height-padding.bottom-yAxisWidth+\")\"))  \n            .attr(\"fill\", \"white\")  \n            .call(yAxis)\n            .selectAll(\"text\")  \n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-2.0em\")\n            .attr(\"dy\", \"0.1em\")\n\n        \n        var circle = svg.selectAll(\"circle\")\n        \t\t\t\t.data(center)\n        \t\t\t\t.enter()\n        \t\t\t\t.append(\"circle\")\n        \t\t\t\t.attr(\"fill\", function(d, idx) {\n\n        \t\t\t\t\tlet distance = hammingDistance(d[0], d[1])\n        \t\t\t\t\treturn colors[distance]\n        \t\t\t\t})\n        \t\t\t\t.attr(\"cx\", function(d){\n        \t\t\t\t\treturn xScale(d[0]) + padding.left\n        \t\t\t\t})\n        \t\t\t\t.attr(\"cy\", function(d) {\n        \t\t\t\t\treturn ((yScale(d[1])) + padding.right - margin.bottom )\n        \t\t\t\t})\n        \t\t\t\t.attr(\"r\", 15)\n        \t\t\t\t.on(\"mouseenter\", function(d, i) {\n        \t\t\t\t\td3.select(this)\n        \t\t\t\t\t  .transition()\n        \t\t\t\t\t  .duration(300)\n        \t\t\t\t\t  .attr(\"opacity\", 0.6)\n        \t\t\t\t\t  .attr(\"r\", 20)\n\n\n        \t\t\t\t\tconst x = padding.left + xScale(d[0])\n        \t\t\t\t\tconst y = (yScale(d[1])) + padding.right - margin.bottom\n\n\n\n\n        \t\t\t\t\tvar line = svg.append('line')\n\t\t\t        \t\t\t\t\t   .attr(\"id\", \"horizentalLine\")\n\t\t\t        \t\t\t\t\t   .attr(\"x1\", padding.left)\n\t\t\t        \t\t\t\t\t   .attr(\"y1\", y)\n\t\t\t        \t\t\t\t\t   .attr(\"x2\", x)\n\t\t\t        \t\t\t\t\t   .attr(\"y2\", y)\n\t\t\t        \t\t\t\t\t   .attr(\"stroke\", \"white\")\n\n        \t\t\t\t\tvar line2 = svg.append(\"line\")\n        \t\t\t\t\t\t\t\t\t.attr(\"id\", \"verticalLine\")\n        \t\t\t\t\t\t\t\t\t.attr(\"x1\", x)\n        \t\t\t\t\t\t\t\t\t.attr(\"y1\", y)\n        \t\t\t\t\t\t\t\t\t.attr(\"x2\", x)\n        \t\t\t\t\t\t\t\t\t.attr(\"y2\", height - padding.bottom)\n        \t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"white\")\n\n\n        \t\t\t\t\n\n        \t\t\t\t\tsvg.append(\"text\")\n        \t\t\t\t\t\t.attr(\"id\", \"xLabel\")\n    \t\t\t\t\t\t\t.attr(\"class\", \"x label\")\n    \t\t\t\t\t\t\t.attr(\"text-anchor\", \"end\")\n    \t\t\t\t\t\t\t.attr(\"x\", -width + padding.bottom + margin.bottom + margin.top)\n\t\t\t\t\t    \t\t.attr(\"y\", x) //From padding.left to height because of the rotation \n\t\t\t\t\t    \t\t.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t    \t\t.attr(\"fill\", \"yellow\")\n\t\t\t\t\t    \t\t.attr(\"font-size\", \"12px\")\n\t\t\t\t\t    \t\t.text(d[0].toString());\n\n\t\t\t\t\t    \tsvg.append(\"text\")\n\t\t\t\t\t    \t\t.attr(\"id\", \"yLabel\")\n    \t\t\t\t\t\t\t.attr(\"class\", \"y label\")\n\t\t\t\t\t    \t\t.attr(\"text-anchor\", \"end\")\n\t\t\t\t\t    \t\t.attr(\"y\", y) // height - padding.bottm - padding.top -> padding.bottom\n\t\t\t\t\t    \t\t.attr(\"x\", padding.left - margin.left)\n\t\t\t\t\t    \t\t.attr(\"fill\", \"yellow\")\n\t\t\t\t\t    \t\t.attr(\"font-size\", \"12px\")\n\t\t\t\t\t    \t\t.text(d[1].toString()); \n\n\t\t\t\t\t    \t\n        \t\t\t\t}).on(\"mouseleave\", function(){\n        \t\t\t\t\td3.select(this)\n        \t\t\t\t\t  .transition()\n        \t\t\t\t\t  .duration(300)\n        \t\t\t\t\t  .attr(\"opacity\", 1)\n        \t\t\t\t\t  .attr(\"r\", 15)\n\n\n        \t\t\t\t\t svg.selectAll(\"#xLabel\").remove()\n        \t\t\t\t\t svg.select(\"#yLabel\").remove()\n\t\t\t\t        \t svg.select(\"#horizentalLine\").remove()\n\t\t\t\t        \t svg.select(\"#verticalLine\").remove()\n        \t\t\t\t})\n\n\n\n\t\t        for (var i = 0; i <= center.length - 1; i++) {\n\n\t\t        \tvar k = hammingDistance(center[i][0], center[i][1])\n\n\t\t        \tsvg.append(\"text\")\n\t\t        \t\t\t.attr(\"class\", \"value\")\n\t\t        \t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t        \t\t\t.attr(\"x\", padding.left + xScale(center[i][0]))\n\t\t        \t\t\t.attr(\"y\", yScale(center[i][1]) + padding.right - margin.bottom + 4)\n\t\t        \t\t\t.text(k)\n\n\t\t        \t\n\t\t        \t\n\t\t        }                                                                     \n\n   \t}\n\n  \trender() {\n\n  \t\treturn(\n  \t\t\t\t<>\n  \t\t\t\t\n  \t\t\t\t<div id=\"body\" className=\"Hamming\">\n  \t\t\t\t\t<h3 className=\"PlotTitle\">This is the hamming distance plot</h3>\n\n  \t\t\t\t</div>\n\n  \t\t\t\t<form onSubmit={this.handleSubmit} className=\"numberInput\">\n        \t\t\t<label>\n         \t\t \t5-digit Number:\n          \t\t\t<input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n\t\t        \t</label>\n\t\t        \t<input type=\"submit\" value=\"Submit\" />\n\t\t      \t</form>\n\n                \n                <div class=\"container\" id=\"forkButton\">\n                <a class=\"github-button\" href=\"https://github.com/GeneralZYQ/researchable-assignment\" data-icon=\"octicon-repo-forked\" aria-label=\"Fork ntkme/github-buttons on GitHub\">\n                Fork\n                </a>\n                </div>\n  \t\t\t\t</>\n\n  \t\t\t\t\n  \t\t\t\t \n  \t\t\t)\n  \t}\n\n}\n\nexport default HammingDistancePlot;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport HammingDistancePlot from './Hamming.js';\nimport reportWebVitals from './reportWebVitals';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\n\t<HammingDistancePlot/>\n\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}